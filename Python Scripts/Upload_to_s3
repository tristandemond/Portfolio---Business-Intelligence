import subprocess
import boto3
import sys
import os
import json
from github import Github

def list_changed_files():
    #command = "git show --pretty='' --name-only " + sys.argv[1]
    #changed_files = subprocess.check_output(
    #    ["git", "show", "--name-only", sys.argv[1]]
    #).decode("utf-8").strip().split("\n")
    token = os.getenv("GIT_TOKEN")
    repo_name = "dynamo"
    repo = ""
    sha = sys.argv[1]
    git = Github(token)
    get_repo = git.get_repo(f'{repo}/{repo_name}')
    commit = get_repo.get_commit(sha=sha)
    changed_files = [file.filename for file in commit.files]
    print("==================================")
    print(changed_files)
    return changed_files

def process_json_file(json_file_path):
    with open(json_file_path, "r") as json_file:
        data = json.load(json_file)
    updated_content = [json.dumps(item, separators=(",", ":")) for item in data]
    with open(json_file_path, "w") as json_file:
        json_file.write("\n".join(updated_content))
    print(f"The file '{json_file_path}' has been updated.")
    return updated_content

def upload_to_s3(local_file_name, s3_file_name):
    print("uploading to s3...")
    s3_client = boto3.client("s3")
    process_json_file(local_file_name)
    s3_client.upload_file(local_file_name, "", s3_file_name)
    print("successfully uploaded to s3")

if __name__ == "__main__":
    changed_files = list_changed_files()
    for file in changed_files:
        local_file = os.path.abspath(file)
        print(local_file)
        if "script/input" in local_file:
            s3_file = "v_internal_" + file.split("/")[2] + "/" + file.split("/")[-1]
            print(s3_file)
            upload_to_s3(local_file, s3_file)